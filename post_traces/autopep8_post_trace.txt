--- original/src/rand.py
+++ fixed/src/rand.py
@@ -6,6 +6,7 @@
 """
 
 import subprocess
+
 
 def random_array(arr):
     """
@@ -19,5 +20,6 @@
         result = subprocess.run(["shuf", "-i", "1-20", "-n", "1"],
                                 capture_output=True, text=True, check=True)
         # Convert the output to integer, ensuring to strip any trailing newlines or spaces
-        arr[i] = int(result.stdout.strip(), base=10)  # Need to specify base as 10
+        # Need to specify base as 10
+        arr[i] = int(result.stdout.strip(), base=10)
     return arr
--- original/src/hw2_debugging.py
+++ fixed/src/hw2_debugging.py
@@ -9,6 +9,7 @@
 """
 
 import random
+
 
 def merge_sort(input_arr):
     """
@@ -34,23 +35,27 @@
     left_index = 0
     right_index = 0
     merge_arr = [None] * (len(left_arr) + len(right_arr))
-    
+
     # Ensure correct index assignment and fixing slice vs. int issue
     while left_index < len(left_arr) and right_index < len(right_arr):
         if left_arr[left_index] < right_arr[right_index]:
-            merge_arr[left_index + right_index] = left_arr[left_index]  # Fixed indexing
+            # Fixed indexing
+            merge_arr[left_index + right_index] = left_arr[left_index]
             left_index += 1
         else:
-            merge_arr[left_index + right_index] = right_arr[right_index]  # Fixed indexing
+            # Fixed indexing
+            merge_arr[left_index + right_index] = right_arr[right_index]
             right_index += 1
 
     # Ensure correct index assignment for remaining elements
     while right_index < len(right_arr):
-        merge_arr[left_index + right_index] = right_arr[right_index]  # Fixed indexing
+        # Fixed indexing
+        merge_arr[left_index + right_index] = right_arr[right_index]
         right_index += 1
 
     while left_index < len(left_arr):
-        merge_arr[left_index + right_index] = left_arr[left_index]  # Fixed indexing
+        # Fixed indexing
+        merge_arr[left_index + right_index] = left_arr[left_index]
         left_index += 1
 
     return merge_arr
